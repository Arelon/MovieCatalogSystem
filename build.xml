<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="MCS" basedir="." default="installation" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="build/build.properties"/>

    <property environment="env"/>

    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME"/>
    </condition>

    <target name="clean" description="Init tasks">
        <delete dir="${compile.dir}" failonerror="false"/>
        <delete dir="${distro.dir}" failonerror="false"/>
        <delete dir="${install.dir}" failonerror="false"/>
        <delete dir="${ivy.resolved.libs.target.dir}" failonerror="false"/>
        <condition property="ivy.should.not.download">
            <or>
                <resourceexists>
                    <file file="${ivy.jar.file}"/>
                </resourceexists>
                <isset property="offline"/>
            </or>
        </condition>

    </target>

    <target name="download-ivy" depends="clean" unless="ivy.should.not.download">
        <echo message="Downloading Ivy since ivy.should.not.download=false"/>
        <mkdir dir="${ivy.jar.dir}"/>
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve" description="Retrieve dependencies with ivy" depends="init-ivy">
        <ivy:settings file="build/ivyconf.xml"/>
        <ivy:retrieve file="build/ivy.xml" pattern="${ivy.resolved.libs.target.dir}/[artifact].[ext]"/>
        <copy todir="${ivy.resolved.libs.target.dir}" overwrite="true">
            <fileset dir="${explicit.lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
    </target>

    <path id="classpath">
        <fileset dir="${ivy.resolved.libs.target.dir}">
            <include name="*.*"/>
        </fileset>
        <fileset dir="${env.FINDBUGS_HOME}/lib" erroronmissingdir="true">
            <include name="findbugs-ant.jar"/>
        </fileset>
    </path>

    <target name="init" description="Init tasks" depends="resolve">
        <mkdir dir="${output.dir}"/>
        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="classpath" />
        <taskdef name="nsis" classname="net.sf.nsisant.Task" classpathref="classpath"/>
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="classpath"/>
        <tstamp/>
    </target>

    <target name="generate-metamodel" description="Generate JPA 2 metamodel" depends="init">
        <mkdir dir="${compile.dir}"/>
        <mkdir dir="${src.metamodel.dir}"/>
        <javac source="1.7" encoding="UTF-8" srcdir="${src.dir}" destdir="${compile.dir}"
               includeantruntime="false" includes="${src.metamodel.includes}">
            <classpath refid="classpath"/>
            <compilerarg value="-processor"/>
            <compilerarg value="org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor"/>
            <compilerarg value="-s"/>
            <compilerarg value="${src.metamodel.dir}"/>
            <compilerarg value="-proc:only"/>
        </javac>
    </target>

    <target name="compile" description="Copying compiled MCS files" depends="generate-metamodel">
        <javac destDir="${compile.dir}" source="1.7" encoding="UTF-8" includeantruntime="false" debug="false">
            <src path="${src.dir}"/>
            <src path="${src.metamodel.dir}"/>
            <classpath refid="classpath"/>
            <compilerarg value="-proc:none"/>
        </javac>

        <copy todir="${compile.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" description="JARs the MovieCatalogSystem" depends="compile">
        <mkdir dir="${distro.dir}"/>
        <buildnumber file="${build.properties.file}"/>
        <property file="${build.properties.file}"/>

        <jar destfile="${distro.dir}/mcs-${src.version}.${build.number}.jar">
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="${src.mainClass}"/>
                <attribute name="Implementation-Version" value="${src.version}.${build.number}"/>
            </manifest>
            <fileset dir="${compile.dir}"/>
        </jar>

        <copy todir="${ivy.resolved.libs.target.dir}" file="${distro.dir}/mcs-${src.version}.${build.number}.jar"
              overwrite="true"/>
    </target>

    <target name="installation" description="Creates the installation" depends="jar">
        <mkdir dir="${distro.dir}"/>

        <echo message="Building NSIS Installation" level="info"/>

        <mkdir dir="${install.dir}"/>
        <mkdir dir="${install.dir}/bin"/>
        <mkdir dir="${install.dir}/lib"/>

        <copy todir="${install.dir}" overwrite="false">
            <fileset dir="${build.overrides.dir}" />
        </copy>

        <copy todir="${install.dir}/lib" overwrite="false">
            <fileset dir="${ivy.resolved.libs.target.dir}">
                <exclude name="ant-contrib.jar"/>
                <exclude name="aspectjtools.jar"/>
                <exclude name="hamcrest*.jar"/>
                <exclude name="hibernate-jpamodelgen.jar"/>
                <exclude name="junit.jar"/>
                <exclude name="nsisant-1.2.jar"/>
                <exclude name="swt*debug.jar"/>
            </fileset>
        </copy>

        <copy todir="${install.dir}/bin" overwrite="false">
            <fileset dir="${startup.dir}">
                <include name=".launcher"/>
                <include name="MD5.dll"/>
                <include name="*.dtd"/>
                <include name="*.properties"/>
                <include name="*.xml"/>
            </fileset>
        </copy>

        <property name="absolute.install.dir" location="${install.dir}" />

        <nsis script="${nsis.setup.script}" verbosity="2" noconfig="yes" path="${nsis.home}">
            <define name="VERSION" value="${src.version}.${build.number}-${DSTAMP}"/>
            <define name="INSTALL_SOURCE_DIR" value="${absolute.install.dir}"/>
        </nsis>

        <if>
            <equals arg1="${nsis.dont.delete.installation.files}" arg2="true"/>
            <then>
                <echo message="DELETION OF INSTALLATION FILES OMITTED"/>
            </then>
            <else>
                <delete dir="${install.dir}" failonerror="false"/>
            </else>
        </if>

        <delete>
            <fileset dir="${output.dir}">
                <include name="mcs-*${DSTAMP}.exe" />
            </fileset>
        </delete>

        <move todir="${output.dir}">
            <fileset dir="${build.dir}">
                <include name="mcs-*.exe" />
            </fileset>
        </move>

        <delete dir="${compile.dir}" failonerror="false"/>
        <delete dir="${distro.dir}" failonerror="false"/>
    </target>

    <target name="findbugs" description="FindBugs" depends="compile">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="classpath"/>
        <findbugs failonerror="true"
                  home="${env.FINDBUGS_HOME}" output="html" outputFile="${output.dir}/FindBugsAnalysis.html" jvmargs="-Xmx256m"
                  reportlevel="low" excludefilter="build/FindBugsExclusiveFilter.xml">
            <auxclasspath>
                <fileset dir="${ivy.resolved.libs.target.dir}">
                    <include name="*.*"/>
                </fileset>
            </auxclasspath>
            <sourcepath path="${src.dir}"/>
            <class location="${compile.dir}"/>
        </findbugs>
    </target>

</project>