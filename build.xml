<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="MCS" basedir="." default="zip" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="build.properties"/>

    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME"/>
    </condition>

    <target name="clean" description="Init tasks">
        <delete dir="${compile.dir}" failonerror="false"/>
        <delete dir="${distro.dir}" failonerror="false"/>
        <delete dir="${ivy.resolved.libs.target.dir}" failonerror="false"/>
    </target>

    <target name="download-ivy" unless="offline" depends="clean">
        <mkdir dir="${ivy.jar.dir}"/>
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="resolve" description="Retrieve dependencies with ivy" depends="init-ivy">
        <ivy:settings file="ivyconf.xml" />
        <ivy:retrieve file="ivy.xml" pattern="${ivy.resolved.libs.target.dir}/[artifact].[ext]"/>
        <copy todir="${ivy.resolved.libs.target.dir}" overwrite="true">
            <fileset dir="${explicit.lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
    </target>

    <path id="classpath">
        <fileset dir="${ivy.resolved.libs.target.dir}">
            <include name="*.*"/>
        </fileset>
        <fileset dir="${findbugs.directory}/lib" erroronmissingdir="false">
            <include name="findbugs-ant.jar"/>
        </fileset>
    </path>

    <target name="init" description="Init tasks" depends="resolve">
        <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties" classpathref="classpath"/>
        <tstamp/>
    </target>

    <target name="generate-metamodel" description="Generate JPA 2 metamodel" depends="init">
        <mkdir dir="${compile.dir}"/>
        <mkdir dir="${src.metamodel.dir}"/>
        <javac source="1.6" encoding="UTF-8" srcdir="${src.dir}" destdir="${compile.dir}"
               includeantruntime="false" includes="${src.metamodel.includes}">
            <classpath refid="classpath"/>
            <compilerarg value="-processor"/>
            <compilerarg value="org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor"/>
            <compilerarg value="-s"/>
            <compilerarg value="${src.metamodel.dir}" />
            <compilerarg value="-proc:only" />
        </javac>
    </target>

    <target name="compile" description="Copying compiled MCS files" depends="generate-metamodel">
        <javac destDir="${compile.dir}" source="1.7" encoding="UTF-8" includeantruntime="false" debug="true">
            <src path="${src.dir}" />
            <src path="${src.metamodel.dir}" />
            <classpath refid="classpath"/>
            <compilerarg value="-proc:none" />
        </javac>

        <copy todir="${compile.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" description="JARs the MovieCatalogSystem" depends="compile">
        <mkdir dir="${distro.dir}"/>
        <buildnumber file="${build.properties.file}"/>
        <property file="${build.properties.file}"/>

        <jar destfile="${distro.dir}/mcs-${src.version}.${build.number}.jar">
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Main-Class" value="${src.mainClass}"/>
                <attribute name="Implementation-Version" value="${src.version}.${build.number}"/>
            </manifest>
            <fileset dir="${compile.dir}"/>
        </jar>

        <copy todir="${ivy.resolved.libs.target.dir}" file="${distro.dir}/mcs-${src.version}.${build.number}.jar"
              overwrite="true"/>
    </target>

    <target name="zip" description="ZIPs the whole distro" depends="jar">
        <mkdir dir="${distro.dir}"/>

        <delete>
            <fileset dir="">
                <include name="${ant.project.name}-${src.version}.${build.number}-${DSTAMP}*.zip"/>
            </fileset>
        </delete>

        <copy todir="${distro.dir}" overwrite="true">
            <fileset dir="${startup.dir}" excludes="*reveng*,*dev*">
                <include name="*.properties"/>
                <include name=".launcher"/>
                <include name="*.xml"/>
                <include name="*.jpg"/>
            </fileset>
        </copy>

        <delete file="${ant.project.name}-${src.version}.${build.number}-*.zip" failonerror="false"/>

        <zip destfile="${zip.target.dir}/${ant.project.name}-${src.version}.${build.number}-${DSTAMP}${TSTAMP}.zip"
             duplicate="preserve">
            <zipfileset dir="${build.overrides.dir}" prefix=""/>
            <zipfileset dir="${ivy.resolved.libs.target.dir}" prefix="lib">
                <exclude name="mcs.jar"/>
                <exclude name="aspectjtools.jar"/>
                <exclude name="hamcrest*.jar"/>
                <exclude name="junit.jar"/>
            </zipfileset>
            <zipfileset dir="${distro.dir}" prefix="bin" excludes="*.jar"/>
            <zipfileset dir="${distro.dir}" prefix="lib" includes="*.jar"/>
            <zipfileset dir="${root.dir}" prefix="" includes="*.exe"/>
            <zipfileset dir="${export.dir}" prefix="bin/export"/>
        </zip>

        <delete dir="${compile.dir}" failonerror="false"/>
        <delete dir="${distro.dir}" failonerror="false"/>
    </target>

    <target name="findbugs" description="FindBugs" depends="compile">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" classpathref="classpath" />
        <findbugs failonerror="true"
                  home="${findbugs.directory}" output="html" outputFile="FindBugsAnalysis.html" jvmargs="-Xmx256m"
                  reportlevel="low" excludefilter="FindBugsExclusiveFilter.xml">
            <auxclasspath>
                <fileset dir="${ivy.resolved.libs.target.dir}">
                    <include name="*.*"/>
                </fileset>
            </auxclasspath>
            <sourcepath path="${src.dir}" />
            <class location="${compile.dir}"/>
        </findbugs>
    </target>


</project>